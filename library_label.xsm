MOV R1, SP
MOV R2, 5
SUB R1, R2
MOV R1, [R1]
MOV R2, "Write"
EQ R2, R1
JNZ R2, L1
MOV R2, "Read"
EQ R2, R1
JNZ R2, L2
MOV R2, "Exit"
EQ R2, R1
JNZ R2, L3
MOV R2, "Heapset"
EQ R2, R1
JNZ R2, L4
MOV R2, "Alloc"
EQ R2, R1
JNZ R2, L5
MOV R2, "Free"
EQ R2, R1
JNZ R2, L6
L1:
MOV R1, SP
MOV R2, 4
SUB R1, R2
MOV R2, [R1]
ADD R1, 1
MOV R3, [R1]
ADD R1, 1
MOV R4, [R1]
MOV R5, 5
PUSH R5
PUSH R2
PUSH R3
PUSH R4
PUSH R5
INT 7
POP R1
POP R2
POP R2
POP R2
POP R2
MOV R2, SP
MOV R3, 1
SUB R2, R3
MOV [R2], R1
RET
L2:
MOV R1, SP
MOV R2, 4
SUB R1, R2
MOV R2, [R1]
ADD R1, 1
MOV R3, [R1]
ADD R1, 1
MOV R4, [R1]
MOV R5, 7
PUSH R5
PUSH R2
PUSH R3
PUSH R4
PUSH R5
INT 6
POP R1
POP R2
POP R2
POP R2
POP R2
MOV R2, SP
MOV R3, 1
SUB R2, R3
MOV [R2], R1
RET
L3:
PUSH R5
PUSH R5
PUSH R5
PUSH R5
PUSH R5
INT 10
POP R2
POP R2
POP R2
POP R2
POP R2
RET
L4:
MOV R1, 1024
MOV R2, 1032
J1:
MOV R3, 2048
LE  R3, R2
JNZ R3, J2
MOV [R1], R2
ADD R1, 8
ADD R2, 8
JMP J1
J2:
MOV [R1],-1
MOV R2, SP
MOV R3, 1
SUB R2, R3
MOV [R2], 0
RET
L5:
MOV R1, 1024
MOV R2, [R1]
MOV R3, 0
MOV R4, 1
SUB R3, R4
EQ  R3, R2
JZ  R3, J3
MOV R1, SP
MOV R2, 1
SUB R1, R2
MOV [R1], -1
RET
J3:
MOV R3, [R2]
MOV [R1], R3
MOV R1, SP
MOV R3, 1
SUB R1, R3
MOV [R1], R2
RET
L6:
MOV R1, SP
MOV R2, 4
SUB R1, R2
MOV R1, [R1]
MOV R3, R1
MOV R2, R3
ADD R2, 8
J4:
LE  R2, R3
JNZ R2, J5
MOV [R3], 0
ADD R3, 1
JMP J4
J5:
MOV R3, 1024
MOV R4, [R3]
MOV [R1], R4
MOV [R3], R1
RET